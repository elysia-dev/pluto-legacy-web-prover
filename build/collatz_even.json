{"noir_version":"1.0.0-beta.3+ceaa1986628197bd1170147f6a07f0f98d21030a","hash":9704171818230318209,"abi":{"parameters":[{"name":"folding_variables","type":{"kind":"struct","path":"nivc::FoldingVariables","fields":[{"name":"registers","type":{"kind":"array","length":1,"type":{"kind":"field"}}},{"name":"program_counter","type":{"kind":"field"}}]},"visibility":"public"}],"return_type":{"abi_type":{"kind":"struct","path":"nivc::FoldingVariables","fields":[{"name":"registers","type":{"kind":"array","length":1,"type":{"kind":"field"}}},{"name":"program_counter","type":{"kind":"field"}}]},"visibility":"public"},"error_types":{}},"bytecode":"H4sIAAAAAAAA/9VY21LCMBDd3kSuIsKTP5H0Au2T+Ckyls/02zSQHZe0gNATBneG2TYppycnJ8lCQPuY/Xxe7XVsc0jNCGxe26y6hQZiqRa612Jrt0FqwfokLEhks+n4ctoSQYIj6kauQVZiZWqZ5/UqrXWmP1RabcpC5cVmWepSF2XxmZZZVpd5uao21UpVKs9qvS2qbGux4uuxtIOlEtwYVWz1DKgZrim78o5P8L4UW/J98EnYgIdnjHXpex5wE6h7wPH60rBH53e4S9/TI+wOhx53Ysd9zjvnwsVFzvcjUEO5ORvcd7rtiYfcFFvoorBTqUXf5gELwgKajjenbUDNXRp94kkRrzVXvd1Hn3BGHRD2xDNxC1P26f+ZcmjziAVhA5oO15Qj8m9KhJHYlEPCmXJEWFP+tQxT3UIjeUu+Y5+Exx5wJ+S3dFLdYjfuiRAYhHtTsyFPAcn3ySdhA+7WbV3JPwE5Tu/cuEbDKeFr6in5OU7Rc43cWJ6B8+JhrtOJnevoDjXkUx+5Xmbg+TjmQdUtdAgcM7qMRe8LZo3M8N7WEWErpZgOQ5bdgbg3OWp57tHmg9+N9FuRrzFcU8Yf+sHf/YfhxkBcD6ldp7jle8GR+9DJp549VQiNW/oY88VmyZfH0XfyQuACtdSMP/eD3zpXC3E9d8Yp9V6DODAer4mEmhE6ffysu2YCPD/tcola3sXBnpmLNtbzG2RvEUo2GgAA","debug_symbols":"ldRNCoMwEAXgu8zahab506uUUqLGEghRohaK9O5Ni0KxQnm7vAzfbB7JQq2t59vVha4fqTov5PvGTK4PKS2Uf67GwYR3GicTJ6o4ExnZ0KaTZM+MOuctVVI9LxkVKGAoOKGAo0CgQKJAoUCjoDwCgm9ACL4vLodFAQsGi8O2lTytQim1FxwWAhYSFuqP0D8PScOiRAU77Fzn5So02/fBClgwTKRQR+e9u12/f6J0fTfRmdrbNXZzaL6m02PYJpsfYt/Ydo72vekzS+tf","file_map":{"67":{"source":"use nivc::FoldingVariables;\n\n/// When the value is even, divide it by 2.\n/// If the value is 1, return -1 to indicate the end of the sequence.\n/// Otherwise, return 0 or 1 to indicate the next program counter, i.e., collatz_even or collatz_odd.\npub fn main(folding_variables: pub FoldingVariables<1>) -> pub FoldingVariables<1> {\n    // Get the value from the first register as a u64 for easier manipulation.\n    let value = folding_variables.registers[0] as u64;\n\n    // Run the even-value transformation. { f(n) = n / 2 }\n    let next_value = value / 2;\n\n    // If the next value is 1, we've reached the end of the sequence (the fixed cycle predicted by the Collatz conjecture).\n    // We return -1 to indicate that the sequence has ended.\n    let next_pc = if next_value % 2 == 0 {\n        0\n    } else if next_value == 1 {\n        -1\n    } else {\n        1\n    };\n\n    // Return the updated folding variables with the new value and program counter.\n    FoldingVariables { registers: [next_value as Field], program_counter: next_pc }\n}\n","path":"/Users/hyunminlee/Development/study/ZK/pluto/edge/examples/collatz_even/src/main.nr"}},"names":["main"],"brillig_names":["directive_integer_quotient","directive_invert"]}